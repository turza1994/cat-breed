{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mazba Turza\\\\Desktop\\\\webdev\\\\project\\\\robofriends-master\\\\robofriends-master\\\\src\\\\App.js\";\n// import {robots} from'./robots';\nimport CardList from './CardList';\nimport Searchbox from './Searchbox';\nimport ColorPicker from './ColorPicker';\nimport RandomColor from './RandomColor';\nimport Scroll from './Scroll';\nimport './App.css';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      filteredRobots: [],\n      color1: 'rgb(255,204,204)',\n      color2: 'rgb(235,230,230)'\n    };\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onColorChange1 = this.onColorChange1.bind(this);\n    this.onColorChange2 = this.onColorChange2.bind(this);\n    this.onClickRandomColor = this.onClickRandomColor.bind(this);\n  }\n\n  componentDidMount() {\n    const data = async () => {\n      await fetch('https://api.thecatapi.com/v1/breeds').then(response => response.json()).then(json => {\n        this.setState({\n          robots: json,\n          filteredRobots: json\n        });\n        console.log(json); //   this.state.robots.map(element => console.log(element.image.url))\n        // console.log(typeof(json[0].image.url))\n      });\n    };\n\n    data();\n  }\n\n  onSearchChange(e) {\n    let name = e.target.value;\n    let robots = this.state.robots;\n    let filteredRobot = [];\n\n    for (let i = 0; i < robots.length; i++) {\n      if (robots[i].name.toLowerCase().includes(name.toLowerCase())) {\n        filteredRobot.push(robots[i]);\n      }\n    }\n\n    console.log(filteredRobot);\n    this.setState({\n      filteredRobots: filteredRobot\n    });\n  }\n\n  onColorChange1(e) {\n    console.log(e.target.value);\n    this.setState({\n      color1: e.target.value\n    });\n  }\n\n  onColorChange2(e) {\n    console.log(e.target.value);\n    this.setState({\n      color2: e.target.value\n    });\n  }\n\n  onClickRandomColor(e) {\n    let r1 = Math.floor(Math.random() * 255);\n    let g1 = Math.floor(Math.random() * 255);\n    let b1 = Math.floor(Math.random() * 255);\n    let r2 = Math.floor(Math.random() * 255);\n    let g2 = Math.floor(Math.random() * 255);\n    let b2 = Math.floor(Math.random() * 255); // console.log(randomNumber);\n\n    this.setState({\n      color1: `rgb(${r1}, ${g1}, ${b1})`,\n      color2: `rgb(${r2}, ${g2}, ${b2})`\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App tc\",\n      style: {\n        background: `linear-gradient(to left, ${this.state.color1} , ${this.state.color2})`,\n        marginTop: \"-32px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"flex justify-around items-end pt4 pb1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"f1 fw9 b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Cat Friends\"), /*#__PURE__*/React.createElement(Searchbox, {\n      searchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ColorPicker, {\n      onColorChange: this.onColorChange1,\n      color: this.state.color1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ColorPicker, {\n      onColorChange: this.onColorChange2,\n      color: this.state.color2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(RandomColor, {\n      onClickRandomColor: this.onClickRandomColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: this.state.filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mazba Turza/Desktop/webdev/project/robofriends-master/robofriends-master/src/App.js"],"names":["CardList","Searchbox","ColorPicker","RandomColor","Scroll","React","Component","App","constructor","state","robots","filteredRobots","color1","color2","onSearchChange","bind","onColorChange1","onColorChange2","onClickRandomColor","componentDidMount","data","fetch","then","response","json","setState","console","log","e","name","target","value","filteredRobot","i","length","toLowerCase","includes","push","r1","Math","floor","random","g1","b1","r2","g2","b2","render","background","marginTop"],"mappings":"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","sourcesContent":["// import {robots} from'./robots';\nimport CardList from './CardList';\nimport Searchbox from './Searchbox';\nimport ColorPicker from './ColorPicker';\nimport RandomColor from './RandomColor';\nimport Scroll from './Scroll';\nimport './App.css';\n\nimport React, { Component } from 'react';\nclass App extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            filteredRobots: [],\n            color1: 'rgb(255,204,204)',\n            color2: 'rgb(235,230,230)'\n        }\n\n        this.onSearchChange = this.onSearchChange.bind(this);\n        this.onColorChange1 = this.onColorChange1.bind(this);\n        this.onColorChange2 = this.onColorChange2.bind(this);\n        this.onClickRandomColor = this.onClickRandomColor.bind(this);\n    }\n\n    componentDidMount(){\n         const data = async () => {\n           await  fetch('https://api.thecatapi.com/v1/breeds')\n        .then(response => response.json())\n        .then((json) => {\n            this.setState({robots: json, filteredRobots: json});\n            console.log(json)\n        //   this.state.robots.map(element => console.log(element.image.url))\n            // console.log(typeof(json[0].image.url))\n        });\n        }\n        data();\n    }\n\n    onSearchChange(e){\n        let name = e.target.value;\n        let robots = this.state.robots;\n        let filteredRobot = [];\n        for(let i=0; i<robots.length; i++){\n            if(robots[i].name.toLowerCase().includes(name.toLowerCase())){\n                filteredRobot.push(robots[i]);\n            }\n        }\n        console.log(filteredRobot);\n        this.setState({filteredRobots: filteredRobot});\n        \n    }\n\n    onColorChange1(e){\n        console.log(e.target.value);\n        this.setState({color1: e.target.value});\n    }\n    onColorChange2(e){\n        console.log(e.target.value);\n        this.setState({color2: e.target.value});\n    }\n\n    onClickRandomColor(e){\n        let r1 = Math.floor(Math.random()*255);\n        let g1 = Math.floor(Math.random()*255);\n        let b1 = Math.floor(Math.random()*255);\n        let r2 = Math.floor(Math.random()*255);\n        let g2 = Math.floor(Math.random()*255);\n        let b2 = Math.floor(Math.random()*255);\n        // console.log(randomNumber);\n        this.setState({\n            color1: `rgb(${r1}, ${g1}, ${b1})`,\n            color2: `rgb(${r2}, ${g2}, ${b2})`\n        });\n    }\n\n    render(){\n        \n        return(\n            <div className=\"App tc\" style={{background: `linear-gradient(to left, ${this.state.color1} , ${this.state.color2})`, marginTop: \"-32px\"}} >\n                <header className=\"flex justify-around items-end pt4 pb1\">\n                    <h3 className=\"f1 fw9 b\">Cat Friends</h3>\n                    <Searchbox searchChange = { this.onSearchChange } />\n                    {/* <h3>Change Background Color ?</h3> */}\n                    <div>\n                        <ColorPicker onColorChange = {this.onColorChange1} color = {this.state.color1} />\n                        <ColorPicker onColorChange = {this.onColorChange2} color = {this.state.color2} />\n                        <RandomColor onClickRandomColor = {this.onClickRandomColor} />\n                    </div>\n                    \n                </header>\n                <Scroll>\n                    <CardList robots={this.state.filteredRobots} />\n                </Scroll>\n            </div>\n        );\n        \n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}